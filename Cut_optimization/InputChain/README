# InputChain

--- Description ---

- Supporting input file configuration class for TMVA and TryCuts.


===============================================================


--- Summary ---

The InputChain object parses an xml configuration file that specifies multiple .root files containing data trees. The files should follow a regular, integer-based indexing scheme. TMVA (readxml, specifically) and TryCuts use information from InputChain configuration files to through multiple trees consecutively, accounting for the differences between pPb and Pbp data.


** Configuration **

== Configuration file nodes ==

All of the nodes listed are necessary. No more and no less. The configuration file should follow the node structure indicated by the listing below. Text in angle brackets "<>" indicates the actual names of nodes. Text inside quotation marks indicates node content (quotation marks should be excluded in the actual xml file).

The configuration file has just one base node, <Files>, that contains all of the configuration information.

1. <Files>
    a. <in_files>
        i. <directory_name> - The name of the internal directory file within the .root file containing the tree. Leave blank if the tree is directly within the .root file.
        ii. <tree_name> - The name of the tree.

        iii. <in_file_1>
            * <name_base> - If just using one input file, this is the path to the file. If using multiple files with regularly indexed names, replace the index in the name with a "{}" (without the quotation marks). There can only be one instance of "{}".
            * <index_limits> - Should be two integers, a and b, separated by a comma (no spaces), where a and b are the first and last integers (inclusive) with which to replace the "{}" in the name_base. TMVA and TryCuts will iterate through all integers between a and b. If only using one file, set a and b to be the same number. Skipping specific integers is not supported. To skip certain indices, create another <in_file> node with the same name_base, but different index_limits.
        iv. <in_file_2> - Similar to in_file_1
            * <name_base>
            * <index_limits>
        v. <in_file_3> - Similar to in_file_1 and in_file_2
            * <name_base>
            * <index_limits>
        vi. etc...

    b. <y_cm_correction> - Should be 0.465 for pPb data, -0.465 for Pbp data, and 0 for pp data. Relates rapidity to center of mass rapidity by the equation:
        y_cm = y + y_cm_correction


===============================================================


--- Config files ---

The files contained in the config/ directory contain certain useful configurations.

1. The L_pPb, L_Pbp, K_pPb, and K_Pbp files specify all the files in storage from successful jobs on pPb{1-8} and Pbp{1-8}.

2. The L_pPb_4_6, L_Pbp_4_6, L_pPb_high_pt, L_Pbp_high_pt, K_pPb_high_pt, and K_Pbp_high_pt files specify skims that were small enough to be merged into a single file and stored locally.

- The LambdaPi files were cut with pt_dau1 > 1 and pt_dau2 > 0.7.

- The LambdaPi skims were cut additionally with 0 <= mass_dau1 < 2, where dau1 is the Lambda daughter.

- The KsProton files were cut with pt_dau1 > 0.5, pt_dau2 > 0.3, and loose dE/dx cuts. The loose dE/dx cuts are:
    dE/dx > 1.24596 * (0.9382720813 / p_dau2)^2 + 2.90394   for   dE/dx >= 4
        OR
    p_dau2 > 1.00037695713   for   dE/dx < 4

- The KsProton skims were cut additionally with 0 <= mass_dau1 < 1, where dau1 is the Kshort daughter.

- Both the LambdaPi and KsProton files/skims were cut with |eta| < 2.4, |eta_dau1| < 2.4, |eta_dau2| < 2.4, 2 <= mass < 2.5, cos(3DPointingAngle_dau1) > 0.999, 3DDecayLengthSig_dau1 > 5, high purity track cuts, and |vtx_z| <= 15.0.

** Exception to the above cuts: the actual LambdaPi_pPb1 (labeled "stdcuts") are actually looser than the others (labeled "extracuts"). This disparity is corrected in the skims, and also handled by TMVA and TryCuts, which re-apply the cuts used in the rest of the files. Thus, this exception makes no difference beyond the raw file containing more than necessary.